[{"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\index.js":"1","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\App.js":"2","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Store\\index.js":"3","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Login\\index.js":"4","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\index.js":"5","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Login\\Login.js":"6","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\List.js":"7","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\UploadModal.js":"8","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\CreatFolder.js":"9","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\TreeSelectModal.js":"10","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\DeleteModal.js":"11","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Store\\Home\\index.js":"12","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Store\\Login\\index.js":"13","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Util\\index.js":"14","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Components\\Header\\index.js":"15","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Components\\Menu\\index.js":"16","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Service\\Login.js":"17","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Service\\Home.js":"18","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Config\\index.js":"19"},{"size":585,"mtime":1612866067067,"results":"20","hashOfConfig":"21"},{"size":482,"mtime":1615039898746,"results":"22","hashOfConfig":"21"},{"size":100,"mtime":1613738360815,"results":"23","hashOfConfig":"21"},{"size":125,"mtime":1612866067064,"results":"24","hashOfConfig":"21"},{"size":3732,"mtime":1620271392563,"results":"25","hashOfConfig":"21"},{"size":3981,"mtime":1620271122503,"results":"26","hashOfConfig":"21"},{"size":3635,"mtime":1620261600199,"results":"27","hashOfConfig":"21"},{"size":2973,"mtime":1620270599973,"results":"28","hashOfConfig":"21"},{"size":1778,"mtime":1620260918817,"results":"29","hashOfConfig":"21"},{"size":4636,"mtime":1620260918827,"results":"30","hashOfConfig":"21"},{"size":1792,"mtime":1620268817834,"results":"31","hashOfConfig":"21"},{"size":2220,"mtime":1620269658223,"results":"32","hashOfConfig":"21"},{"size":775,"mtime":1620270796984,"results":"33","hashOfConfig":"21"},{"size":399,"mtime":1614955509393,"results":"34","hashOfConfig":"21"},{"size":760,"mtime":1620271320981,"results":"35","hashOfConfig":"21"},{"size":776,"mtime":1613738360803,"results":"36","hashOfConfig":"21"},{"size":379,"mtime":1615709631157,"results":"37","hashOfConfig":"21"},{"size":1155,"mtime":1620261829820,"results":"38","hashOfConfig":"21"},{"size":748,"mtime":1615387067413,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"n711a3",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\index.js",[],["86","87"],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\App.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Store\\index.js",["88"],"import login from './Login'\r\nimport home from './Home'\r\n\r\nexport default {\r\n    login ,\r\n    home\r\n}","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Login\\index.js",["89"],"import React from 'react'\r\n\r\nimport Login from './Login'\r\n\r\nexport default () => {\r\n    return (\r\n        <Login />\r\n    )\r\n}","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\index.js",["90"],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Login\\Login.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\List.js",["91","92"],"import React, { useEffect } from \"react\";\r\n\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { message, Table } from \"antd\";\r\n\r\nimport { GetQueryString } from \"../../Util\";\r\n\r\nimport \"./List.scss\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default withRouter(\r\n  inject(\"home\")(\r\n    observer(\r\n      ({ history, home: { fillList, selectedRowKeys, selectedRow, update, getFileList } }) => {\r\n        const columns = [\r\n          {\r\n            title: \"\",\r\n            dataIndex: \"name\",\r\n            key: \"name\",\r\n            render: (text, record) => {\r\n              return (\r\n                <p className=\"list_name\" onClick={() => jumpToFolder(record)}>\r\n                  {text}\r\n                </p>\r\n              );\r\n            },\r\n          },\r\n          {\r\n            title: \"\",\r\n            dataIndex: \"time\",\r\n            key: \"time\",\r\n          },\r\n          {\r\n            title: \"\",\r\n            dataIndex: \"operating\",\r\n            key: \"operating\",\r\n            render: (text, record, index) => \r\n                <span className=\"list_operating\" onClick={()=>downLoad(record)}>下载</span>\r\n            ,\r\n          },\r\n        ];\r\n\r\n        const downLoad = async (e) => {\r\n          if (e.fileName) {\r\n            window.open(`http://42.193.103.37:8080/downloadFile?srcFileId=${e.fileId}`)\r\n          }else {\r\n            message.error('目前仅支持下载文件')\r\n          }\r\n        };\r\n\r\n        useEffect(() => {\r\n          if (\r\n            selectedRow.folderArr.length > 0 ||\r\n            selectedRow.fileArr.length > 0\r\n          ) {\r\n            update({ hasSelected: true });\r\n          } else {\r\n            update({ hasSelected: false });\r\n          }\r\n        }, [selectedRow.folderArr, selectedRow.fileArr]);\r\n\r\n        const getList = () => {\r\n          const destFolderId = GetQueryString(\"destFolderId\");\r\n          const userId = GetQueryString(\"userId\");\r\n          getFileList(userId, destFolderId);\r\n        };\r\n\r\n        const jumpToFolder = (e) => {\r\n          const userId = GetQueryString(\"userId\");\r\n          if (e.fileId) {\r\n            console.log(\"这是一个文件\");\r\n            return;\r\n          } else {\r\n            history.push(`/home?destFolderId=${e.folderId}&userId=${userId}`);\r\n            getList();\r\n          }\r\n        };\r\n\r\n        const onSelectChange = (key, e) => {\r\n          // eslint-disable-next-line array-callback-return\r\n          update({selectedRowKeys : key})\r\n          update({\r\n            selectedRow: {\r\n              folderArr: [],\r\n              fileArr: [],\r\n            },\r\n          });\r\n          e.map((item) => {\r\n            if (item.fileId) {\r\n              update({\r\n                selectedRow: {\r\n                  folderArr: [...selectedRow.folderArr],\r\n                  fileArr: [...selectedRow.fileArr, item.fileId],\r\n                },\r\n              });\r\n            } else {\r\n              update({\r\n                selectedRow: {\r\n                  folderArr: [...selectedRow.folderArr, item.folderId],\r\n                  fileArr: [...selectedRow.fileArr],\r\n                },\r\n              });\r\n            }\r\n          });\r\n        };\r\n\r\n        return (\r\n          <div>\r\n            <Table\r\n              className=\"list_table\"\r\n              columns={columns}\r\n              dataSource={fillList}\r\n              showHeader={false}\r\n              rowSelection={{\r\n                selectedRowKeys,\r\n                onChange: onSelectChange,\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      }\r\n    )\r\n  )\r\n);\r\n","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\UploadModal.js",["93","94","95"],"import React,{ useState, useEffect } from \"react\";\r\n\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { toJS } from \"mobx\";\r\nimport { Upload, Modal, message } from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Dragger } = Upload;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default inject(\"home\")(\r\n  observer(({ home: { \r\n    isModalVisible, \r\n    update, \r\n    uploadFile,\r\n    getFileList,\r\n    fillList,\r\n    deleteFile\r\n   } }) => {\r\n    const [uploadFileList, setUploadFileList] = useState([])\r\n    const [uploadFileObj, setUploadFileObj] = useState({})\r\n    const [uploadData, setUploadData] = useState({})\r\n\r\n    const closeModal = () => {\r\n      setUploadFileList([])\r\n      update({ isModalVisible: !isModalVisible });\r\n    };\r\n\r\n    useEffect(() => {\r\n      setFileStatus(uploadData, uploadFileObj)\r\n    },[uploadData, uploadFileObj])\r\n\r\n    const upload = async (e) => {\r\n      let file = e.file;\r\n      setUploadFileList([...uploadFileList, {name: file.name, status: 'uploading'}])\r\n      const formdata = new FormData();\r\n      formdata.append('mpfs', file);\r\n      const data = await uploadFile(1, formdata)\r\n      await setUploadData(data)\r\n      await setUploadFileObj(file)\r\n    }\r\n\r\n    const setFileStatus = async (data, file) => {\r\n      if(data.code === 200) {\r\n        uploadFileList.forEach(item => {\r\n          if(item.name === file.name) {\r\n            item.status = 'done'\r\n            getFileList(1)\r\n            message.success('上传成功！')\r\n          }else {\r\n            return\r\n          }\r\n        })\r\n        setUploadFileList([...uploadFileList])\r\n      }else {\r\n        uploadFileList.forEach(item => {\r\n          if(item.name === file.name) {\r\n            item.status = 'error'\r\n            message.error('上传失败！')\r\n          }else {\r\n            return\r\n          }\r\n        })\r\n        setUploadFileList([...uploadFileList])\r\n      }\r\n    }\r\n\r\n    const deletePapers = (e) => {\r\n      toJS(fillList).map(item => {\r\n        if(item.fileName === e.name) {\r\n          const data = deleteFile(item.fileId)\r\n          if (data) {\r\n            getFileList(1)\r\n            const list = uploadFileList.filter(item => {\r\n              return item.name != e.name\r\n            })\r\n            setUploadFileList(list)\r\n            message.success('已删除！')\r\n          }else {\r\n            message.error('错误！')\r\n          }\r\n        }\r\n      })\r\n    }\r\n    \r\n    return (\r\n      <Modal\r\n        title=\"上传文件\"\r\n        visible={isModalVisible}\r\n        onCancel={closeModal}\r\n        footer={false}\r\n      >\r\n        <Dragger\r\n          customRequest={upload}\r\n          fileList={uploadFileList}\r\n          onRemove={deletePapers}\r\n        >\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-hint\">上传文件</p>\r\n        </Dragger>\r\n      </Modal>\r\n    );\r\n  })\r\n);\r\n","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\CreatFolder.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\TreeSelectModal.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\DeleteModal.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Store\\Home\\index.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Store\\Login\\index.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Util\\index.js",["96","97"],"export function GetQueryString(name) {\r\n    var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\r\n    var r = window.location.search.substr(1).match(reg); //获取url中\"?\"符后的字符串并正则匹配\r\n    var context = \"\";\r\n    if (r != null)\r\n    context = r[2];\r\n    reg = null;\r\n    r = null;\r\n    return context == null || context == \"\" || context == \"undefined\" ? \"\" : context;\r\n}","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Components\\Header\\index.js",["98"],"import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (props) => {\r\n  const { isLogin, userName, exit } = props;\r\n  return (\r\n    <div className=\"header\">\r\n      <img className=\"logo\" src=\"assets/OIP.jpg\" />\r\n      {isLogin ? (\r\n        <div className=\"login_state_box\">\r\n          <span className=\"state_text\">{userName}</span>\r\n          <span>|</span>\r\n          <span className=\"state_text\" onClick={exit}>退出</span>\r\n        </div>\r\n      ) : (\r\n        <div className=\"login_state_box\">\r\n          <span className=\"state_text\">登录</span>\r\n          <span>|</span>\r\n          <span className=\"state_text\">注册</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Components\\Menu\\index.js",["99","100"],"import React from \"react\";\r\n\r\nimport { Menu } from \"antd\";\r\n\r\nimport \"./index.scss\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <Menu\r\n        style={{ height: \"540px\" }}\r\n        defaultSelectedKeys={[\"1\"]}\r\n        mode=\"inline\"\r\n      >\r\n        <Menu.Item\r\n          key=\"1\"\r\n          icon={<img className=\"menu_icon\" src=\"assets/file.svg\" />}\r\n        >\r\n          <span className=\"menu_text\">我的文件</span>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"2\"\r\n          icon={<img className=\"menu_icon\" src=\"assets/friend.svg\" />}\r\n        >\r\n          <span className=\"menu_text\">我的朋友</span>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Service\\Login.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Service\\Home.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Config\\index.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":4,"column":1,"nodeType":"107","endLine":7,"endColumn":2},{"ruleId":"105","severity":1,"message":"108","line":5,"column":1,"nodeType":"107","endLine":9,"endColumn":2},{"ruleId":"109","severity":1,"message":"110","line":34,"column":8,"nodeType":"111","endLine":34,"endColumn":22,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":61,"column":12,"nodeType":"111","endLine":61,"endColumn":56,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":89,"column":24,"nodeType":"117","messageId":"118","endLine":89,"endColumn":26},{"ruleId":"109","severity":1,"message":"119","line":31,"column":7,"nodeType":"111","endLine":31,"endColumn":34,"suggestions":"120"},{"ruleId":"115","severity":1,"message":"116","line":69,"column":31,"nodeType":"117","messageId":"118","endLine":69,"endColumn":33},{"ruleId":"121","severity":1,"message":"122","line":75,"column":32,"nodeType":"123","messageId":"124","endLine":75,"endColumn":34},{"ruleId":"121","severity":1,"message":"125","line":9,"column":39,"nodeType":"123","messageId":"124","endLine":9,"endColumn":41},{"ruleId":"121","severity":1,"message":"125","line":9,"column":56,"nodeType":"123","messageId":"124","endLine":9,"endColumn":58},{"ruleId":"126","severity":1,"message":"127","line":10,"column":7,"nodeType":"128","endLine":10,"endColumn":52},{"ruleId":"126","severity":1,"message":"127","line":18,"column":17,"nodeType":"128","endLine":18,"endColumn":68},{"ruleId":"126","severity":1,"message":"127","line":24,"column":17,"nodeType":"128","endLine":24,"endColumn":70},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initData'. Either include it or remove the dependency array.","ArrayExpression",["131"],"React Hook useEffect has a missing dependency: 'update'. Either include it or remove the dependency array. If 'update' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["132"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'setFileStatus'. Either include it or remove the dependency array.",["133"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [destFolderId, initData]",{"range":"140","text":"141"},"Update the dependencies array to be: [selectedRow.folderArr, selectedRow.fileArr, update]",{"range":"142","text":"143"},"Update the dependencies array to be: [setFileStatus, uploadData, uploadFileObj]",{"range":"144","text":"145"},[1115,1129],"[destFolderId, initData]",[1766,1810],"[selectedRow.folderArr, selectedRow.fileArr, update]",[879,906],"[setFileStatus, uploadData, uploadFileObj]"]