[{"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\index.js":"1","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\App.js":"2","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Store\\index.js":"3","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Login\\index.js":"4","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\index.js":"5","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Login\\Login.js":"6","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Store\\Home\\index.js":"7","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Store\\Login\\index.js":"8","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Service\\Home.js":"9","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Config\\index.js":"10","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Router\\index.js":"11","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Router\\history.js":"12","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\List.js":"13","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\UploadModal.js":"14","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\CreatFolder.js":"15","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Components\\Header\\index.js":"16","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Components\\Menu\\index.js":"17","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Util\\index.js":"18"},{"size":585,"mtime":1612866067067,"results":"19","hashOfConfig":"20"},{"size":482,"mtime":1615039898746,"results":"21","hashOfConfig":"20"},{"size":100,"mtime":1613738360815,"results":"22","hashOfConfig":"20"},{"size":125,"mtime":1612866067064,"results":"23","hashOfConfig":"20"},{"size":2236,"mtime":1615039901524,"results":"24","hashOfConfig":"20"},{"size":1235,"mtime":1614955509390,"results":"25","hashOfConfig":"20"},{"size":1482,"mtime":1615102511865,"results":"26","hashOfConfig":"20"},{"size":285,"mtime":1614128907031,"results":"27","hashOfConfig":"20"},{"size":809,"mtime":1614955509391,"results":"28","hashOfConfig":"20"},{"size":793,"mtime":1614521059944,"results":"29","hashOfConfig":"20"},{"size":237,"mtime":1613738360812,"results":"30","hashOfConfig":"20"},{"size":147,"mtime":1613738360811,"results":"31","hashOfConfig":"20"},{"size":1752,"mtime":1615299849486,"results":"32","hashOfConfig":"20"},{"size":3022,"mtime":1614955509388,"results":"33","hashOfConfig":"20"},{"size":1789,"mtime":1615298933850,"results":"34","hashOfConfig":"20"},{"size":742,"mtime":1613738360801,"results":"35","hashOfConfig":"20"},{"size":776,"mtime":1613738360803,"results":"36","hashOfConfig":"20"},{"size":399,"mtime":1614955509393,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"n711a3",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\index.js",[],["84","85"],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\App.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Store\\index.js",["86"],"import login from './Login'\r\nimport home from './Home'\r\n\r\nexport default {\r\n    login ,\r\n    home\r\n}","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Login\\index.js",["87"],"import React from 'react'\r\n\r\nimport Login from './Login'\r\n\r\nexport default () => {\r\n    return (\r\n        <Login />\r\n    )\r\n}","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\index.js",["88"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { Layout, Button } from \"antd\";\r\n\r\nimport Head from \"../../Components/Header\";\r\nimport Menu from \"../../Components/Menu\";\r\n\r\nimport List from \"./List\"\r\nimport UploadModal from \"./UploadModal\"\r\nimport CreatFolder from './CreatFolder'\r\nimport \"./index.scss\";\r\n\r\nexport default inject(\"home\")(\r\n  observer(({ \r\n    home: { hasSelected, loginState, name, getFileList, isModalVisible, update, isCreatModalVisible }, \r\n  }) => {\r\n    const [collapsed, setCollapsed] = useState(false);\r\n    const { Header, Content, Sider } = Layout;\r\n\r\n    useEffect(() => {\r\n      getFileList(1);\r\n    }, []);\r\n\r\n    const onCollapse = () => {\r\n      setCollapsed(!collapsed);\r\n    };\r\n\r\n    const showModal = () => {\r\n      update({isModalVisible: !isModalVisible})\r\n    }\r\n\r\n    const creatFolder = () => {\r\n      update({isCreatModalVisible: !isCreatModalVisible})\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Head isLogin={loginState} userName={name} />\r\n        <Layout className=\"menu_layout\">\r\n          <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\r\n            <Menu />\r\n          </Sider>\r\n          <Layout className=\"content_layout\">\r\n            <Header>\r\n              {hasSelected ? (\r\n                <div className=\"features_btn\">\r\n                  <Button className=\"header_button\">复制到</Button>\r\n                  <Button className=\"header_button\">移动到</Button>\r\n                  <Button type=\"primary\" className=\"header_button\" danger>\r\n                    删除\r\n                  </Button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"features_btn\">\r\n                  <Button type=\"primary\" className=\"header_button\" onClick={showModal}>\r\n                    上传\r\n                  </Button>\r\n                  <Button onClick={creatFolder} className=\"header_button_new\">新建文件夹</Button>\r\n                </div>\r\n              )}\r\n            </Header>\r\n            <Content>\r\n              <List />\r\n            </Content>\r\n          </Layout>\r\n        </Layout>\r\n        <UploadModal />\r\n        <CreatFolder />\r\n      </div>\r\n    );\r\n  })\r\n);\r\n","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Login\\Login.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Store\\Home\\index.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Store\\Login\\index.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Service\\Home.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Config\\index.js",["89","90"],"import axios from 'axios';\r\nimport { PATHS, history } from '../Router';\r\n\r\naxios.defaults.withCredentials = true;\r\n\r\nfunction request(url, options) {\r\n  const method = (options.method || 'get').toLowerCase();\r\n  const opts = {\r\n    url,\r\n    method,\r\n    baseURL: options.baseURL || '',\r\n    headers: options.headers || {}\r\n  };\r\n  const optionData = options.data || {};\r\n  if (method === 'get') opts.params = optionData;\r\n  else opts.data = optionData;\r\n  return axios(opts)\r\n    .then((res) => {\r\n      const response = res || {};\r\n      const { status } = response;\r\n      if (status === 200) {\r\n        return response.data\r\n      }\r\n      return Promise.reject(new Error(res.msg));\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n}\r\n\r\nexport default request;\r\n","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Router\\index.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Router\\history.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\List.js",["91","92","93"],"import React, { useState, useEffect } from \"react\";\r\n\r\nimport { toJS } from \"mobx\";\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { Table, Breadcrumb } from \"antd\";\r\n\r\nimport \"./List.scss\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    render: (text, record)  => {\r\n      console.log(text, record);\r\n      return(\r\n        <p className=\"list_name\">{text}</p>\r\n      );\r\n    }\r\n  },\r\n  {\r\n    title: \"\",\r\n    dataIndex: \"time\",\r\n    key: \"time\",\r\n  },\r\n  {\r\n    title: \"\",\r\n    dataIndex: \"operating\",\r\n    key: \"operating\",\r\n    render: () => (\r\n      <div>\r\n        <span className=\"list_operating\">下载</span>\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default inject(\"home\")(\r\n  observer(({ home: { fillList, selectedRowKeys, hasSelected, update } }) => {\r\n\r\n    useEffect(() => {\r\n      console.log(\"a\", selectedRowKeys);\r\n      if (selectedRowKeys.length > 0) {\r\n        update({hasSelected: true})\r\n      }else {\r\n        update({hasSelected: false})\r\n      }\r\n    }, [selectedRowKeys]);\r\n\r\n    const onSelectChange = (e) => {\r\n      console.log('selectedRowKeys changed: ', e);\r\n      update({selectedRowKeys: [...e]})\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Breadcrumb separator=\">\" className=\"list_bread\">\r\n          <Breadcrumb.Item>我的文件</Breadcrumb.Item>\r\n        </Breadcrumb>\r\n        <Table\r\n          className=\"list_table\"\r\n          columns={columns}\r\n          dataSource={fillList}\r\n          showHeader={false}\r\n          rowSelection={{\r\n            // selectedRowKeys,\r\n            onChange: onSelectChange,\r\n            type: \"checkout\",\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  })\r\n);\r\n","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\UploadModal.js",["94","95","96"],"import React,{ useState, useEffect } from \"react\";\r\n\r\nimport { observer, inject } from \"mobx-react\";\r\nimport { toJS } from \"mobx\";\r\n\r\nimport { Upload, Modal, message } from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\n\r\nconst { Dragger } = Upload;\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default inject(\"home\")(\r\n  observer(({ home: { \r\n    isModalVisible, \r\n    update, \r\n    uploadFile,\r\n    getFileList,\r\n    fillList,\r\n    deleteFile\r\n   } }) => {\r\n    const [uploadFileList, setUploadFileList] = useState([])\r\n    const [uploadFileObj, setUploadFileObj] = useState({})\r\n    const [uploadData, setUploadData] = useState({})\r\n\r\n    const closeModal = () => {\r\n      setUploadFileList([])\r\n      update({ isModalVisible: !isModalVisible });\r\n    };\r\n\r\n    useEffect(() => {\r\n      setFileStatus(uploadData, uploadFileObj)\r\n    },[uploadData, uploadFileObj])\r\n\r\n    const upload = async (e) => {\r\n      let file = e.file;\r\n      setUploadFileList([...uploadFileList, {name: file.name, status: 'uploading'}])\r\n      const formdata = new FormData();\r\n      formdata.append('mpfs', file);\r\n      const data = await uploadFile(1, formdata)\r\n      await setUploadData(data)\r\n      await setUploadFileObj(file)\r\n    }\r\n\r\n    const setFileStatus = async (data, file) => {\r\n      if(data.code === 200) {\r\n        uploadFileList.forEach(item => {\r\n          if(item.name === file.name) {\r\n            item.status = 'done'\r\n            getFileList(1)\r\n            message.success('上传成功！')\r\n          }else {\r\n            return\r\n          }\r\n        })\r\n        setUploadFileList([...uploadFileList])\r\n      }else {\r\n        uploadFileList.forEach(item => {\r\n          if(item.name === file.name) {\r\n            item.status = 'error'\r\n            message.error('上传失败！')\r\n          }else {\r\n            return\r\n          }\r\n        })\r\n        setUploadFileList([...uploadFileList])\r\n      }\r\n    }\r\n\r\n    const deletePapers = (e) => {\r\n      toJS(fillList).map(item => {\r\n        if(item.fileName === e.name) {\r\n          const data = deleteFile(item.fileId)\r\n          if (data) {\r\n            getFileList(1)\r\n            const list = uploadFileList.filter(item => {\r\n              return item.name != e.name\r\n            })\r\n            setUploadFileList(list)\r\n            message.success('已删除！')\r\n          }else {\r\n            message.error('错误！')\r\n          }\r\n        }\r\n      })\r\n    }\r\n    \r\n    return (\r\n      <Modal\r\n        title=\"上传文件\"\r\n        visible={isModalVisible}\r\n        onCancel={closeModal}\r\n        onOk={closeModal}\r\n        footer={false}\r\n      >\r\n        <Dragger\r\n          multiple\r\n          customRequest={upload}\r\n          fileList={uploadFileList}\r\n          onRemove={deletePapers}\r\n        >\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-hint\">上传文件</p>\r\n        </Dragger>\r\n      </Modal>\r\n    );\r\n  })\r\n);\r\n","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Pages\\Home\\CreatFolder.js",[],"C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Components\\Header\\index.js",["97"],"import React from \"react\";\r\n\r\nimport \"./index.scss\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default (props) => {\r\n  const { isLogin, userName } = props;\r\n  return (\r\n    <div className=\"header\">\r\n      <img className=\"logo\" src=\"assets/OIP.jpg\" />\r\n      {isLogin ? (\r\n        <div className=\"login_state_box\">\r\n          <span className=\"state_text\">{userName}</span>\r\n          <span>|</span>\r\n          <span className=\"state_text\">退出</span>\r\n        </div>\r\n      ) : (\r\n        <div className=\"login_state_box\">\r\n          <span className=\"state_text\">123登录</span>\r\n          <span>|</span>\r\n          <span className=\"state_text\">注册</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Components\\Menu\\index.js",["98","99"],"import React from \"react\";\r\n\r\nimport { Menu } from \"antd\";\r\n\r\nimport \"./index.scss\";\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default () => {\r\n  return (\r\n    <div className=\"menu\">\r\n      <Menu\r\n        style={{ height: \"540px\" }}\r\n        defaultSelectedKeys={[\"1\"]}\r\n        mode=\"inline\"\r\n      >\r\n        <Menu.Item\r\n          key=\"1\"\r\n          icon={<img className=\"menu_icon\" src=\"assets/file.svg\" />}\r\n        >\r\n          <span className=\"menu_text\">我的文件</span>\r\n        </Menu.Item>\r\n        <Menu.Item\r\n          key=\"2\"\r\n          icon={<img className=\"menu_icon\" src=\"assets/friend.svg\" />}\r\n        >\r\n          <span className=\"menu_text\">我的朋友</span>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\7\\Desktop\\lightningpan\\web-pan\\src\\Util\\index.js",["100","101"],"export function GetQueryString(name) {\r\n    var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\r\n    var r = window.location.search.substr(1).match(reg); //获取url中\"?\"符后的字符串并正则匹配\r\n    var context = \"\";\r\n    if (r != null)\r\n    context = r[2];\r\n    reg = null;\r\n    r = null;\r\n    return context == null || context == \"\" || context == \"undefined\" ? \"\" : context;\r\n}",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":4,"column":1,"nodeType":"108","endLine":7,"endColumn":2},{"ruleId":"106","severity":1,"message":"109","line":5,"column":1,"nodeType":"108","endLine":9,"endColumn":2},{"ruleId":"110","severity":1,"message":"111","line":23,"column":8,"nodeType":"112","endLine":23,"endColumn":10,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":2,"column":10,"nodeType":"116","messageId":"117","endLine":2,"endColumn":15},{"ruleId":"114","severity":1,"message":"118","line":2,"column":17,"nodeType":"116","messageId":"117","endLine":2,"endColumn":24},{"ruleId":"114","severity":1,"message":"119","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"120","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"110","severity":1,"message":"121","line":49,"column":8,"nodeType":"112","endLine":49,"endColumn":25,"suggestions":"122"},{"ruleId":"110","severity":1,"message":"123","line":32,"column":7,"nodeType":"112","endLine":32,"endColumn":34,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":70,"column":31,"nodeType":"127","messageId":"128","endLine":70,"endColumn":33},{"ruleId":"129","severity":1,"message":"130","line":76,"column":32,"nodeType":"131","messageId":"132","endLine":76,"endColumn":34},{"ruleId":"133","severity":1,"message":"134","line":10,"column":7,"nodeType":"135","endLine":10,"endColumn":52},{"ruleId":"133","severity":1,"message":"134","line":18,"column":17,"nodeType":"135","endLine":18,"endColumn":68},{"ruleId":"133","severity":1,"message":"134","line":24,"column":17,"nodeType":"135","endLine":24,"endColumn":70},{"ruleId":"129","severity":1,"message":"136","line":9,"column":39,"nodeType":"131","messageId":"132","endLine":9,"endColumn":41},{"ruleId":"129","severity":1,"message":"136","line":9,"column":56,"nodeType":"131","messageId":"132","endLine":9,"endColumn":58},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","Assign arrow function to a variable before exporting as module default","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFileList'. Either include it or remove the dependency array. If 'getFileList' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["139"],"no-unused-vars","'PATHS' is defined but never used.","Identifier","unusedVar","'history' is defined but never used.","'useState' is defined but never used.","'toJS' is defined but never used.","React Hook useEffect has a missing dependency: 'update'. Either include it or remove the dependency array. If 'update' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["140"],"React Hook useEffect has a missing dependency: 'setFileStatus'. Either include it or remove the dependency array.",["141"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},"Update the dependencies array to be: [getFileList]",{"range":"148","text":"149"},"Update the dependencies array to be: [selectedRowKeys, update]",{"range":"150","text":"151"},"Update the dependencies array to be: [setFileStatus, uploadData, uploadFileObj]",{"range":"152","text":"153"},[693,695],"[getFileList]",[1088,1105],"[selectedRowKeys, update]",[881,908],"[setFileStatus, uploadData, uploadFileObj]"]